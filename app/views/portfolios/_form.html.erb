<%= form_with(model: portfolio, id: "form", local: true) do |form| %>
  <% if portfolio.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(portfolio.errors.count, "error") %> prohibited this portfolio from being saved:</h2>

      <ul>
      <% portfolio.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
  <div class="container" style="margin-top: 20px;">
    <div class="row">
      <div class="col s12 m5 l5">
        <div class="field">
          <%= form.label :title %>
          <%= form.text_field :title %>
        </div>
      </div>
    </div>

    <div class="row">
      <div class="col s12 m5 l5">
        <div class="field">
          <ul>
            <%= form.fields_for :hashtags do |hashtag| %>
            <li>
              <%= hashtag.label :title, '태그' %>
              <%= hashtag.text_field :title %>
            </li>
            <% end %>
          </ul>
        </div>
      </div>
    </div>

    <div class="input-field col s12">
        <div class="editor" id="editor"></div>
    </div>
    <%= form.text_field :content, style: "visibility: hidden;" %>
      
    
    <div class="actions" style="float: right; margin-bottom: 100px;">
      <button class="waves-effect waves-light btn" id="submitButton">POST</button>
    </div>
  </div>
  
  
<% end %>

<script src="/js/editor/materialize.js"></script>

<script type="text/javascript">
document.addEventListener('turbolinks:load', function(){

  

  var toolbar = [
      ['style', ['style', 'bold', 'italic', 'underline', 'strikethrough', 'clear']],
      ['fonts', ['fontsize', 'fontname']],
      ['color', ['color']],
      ['undo', ['undo', 'redo', 'help']],
      ['ckMedia', ['ckImageUploader', 'ckVideoEmbeeder']],
      ['misc', ['link', 'picture', 'table', 'hr', 'codeview', 'fullscreen']],
      ['para', ['ul', 'ol', 'paragraph', 'leftButton', 'centerButton', 'rightButton', 'justifyButton', 'outdentButton', 'indentButton']],
      ['height', ['lineheight']],
  ];

  $('.editor').summernote({
      toolbar: toolbar,
      height: 1000,
      minHeight: 100,
      defaultBackColor: '#fff',
      image: [
        ['imagesize', ['imageSize100', 'imageSize50', 'imageSize25']],
        ['float', ['floatLeft', 'floatRight', 'floatNone']],
        ['remove', ['removeMedia']]
      ],
  });

  // button 들의 action 을 없앤다. (이걸 지우면, 버튼을 눌렀을 때 form 이 submit 되는 현상 발생)
  var buttons = document.querySelectorAll('button'),
  fn      = function(e) { e.preventDefault() };

  for ( var i = buttons.length; i--; ) {
    buttons[i].addEventListener('click', fn, false);
  }

  if(<%= action_name == "edit" %>){
    let content = document.getElementsByClassName('note-editable')[0];
    content.innerHTML = document.getElementById('portfolio_content').value
  }
})

document.getElementById('submitButton').addEventListener('click', function(e){
  e.preventDefault();
  let form = document.getElementById('form');
  let content = document.getElementsByClassName('note-editable')[0]
  let totalWidth = content.offsetWidth;
  
  let imgs = content.getElementsByTagName('img');
  
  for(var i = 0 ; i < imgs.length ; i++){
    img = imgs[i];
    if(img.style.height.indexOf('px') != -1 && img.style.width.indexOf('px') != -1 ){
      // 새로 추가된 사진일 경우에만 px => % 로 크기 조정한다.
      let imgHeight = parseFloat(imgs[i].style.height.replace('px', ''));   
      let imgWidth = parseFloat(imgs[i].style.width.replace('px', ''));
      let imgRatio = imgHeight / imgWidth;
      let withEditorRatio = imgWidth / totalWidth * 100;
      imgs[i].style.width = withEditorRatio + '%';
      imgs[i].style.height = withEditorRatio * imgRatio + '%';
    }
  }
  
  document.getElementById('portfolio_content').value = content.innerHTML;
  form.submit();
})
</script> 
